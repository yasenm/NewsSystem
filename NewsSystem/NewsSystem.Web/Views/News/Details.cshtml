@using NewsSystem.Data.ViewModels.Articles

@model NewsDetailsClientViewModel

@section OpenGraph{
    <meta property="og:url" content="@HttpContext.Current.Request.Path" />
    <meta property="og:type" content="article" />
    <meta property="og:description" content="@Model.Summary" />
    <meta property="og:image" content="@Url.Action("NSImage", "NSImage", new { id = Model.CoverImageId })" />
    <meta property="og:title" content="@Model.Title" />
}

@{
    ViewBag.Title = Model.Title;
}

<div class="content">
    <div class="single-page">
        <div class="print-main">
            <h3>@Model.Title</h3>
            @Html.DisplayFor(m => m.Stats)
            <p class="sub_head">
                Posted by <a href="#">@Model.Author</a>
            </p>
            <span class="img-responsive">@Html.DisplayFor(m => Model.CoverImage)</span>
            <p class="span">
                @Html.Action("NewsTags", "Tag", new { newsId = Model.Id }) |  on @Html.DisplayFor(m => m.CreatedOn)
            </p>
            <p class="ptext">@Html.Raw(Model.Description)</p>
            <br />
            @if (Model.RelatedAlbumId.HasValue)
            {
                @Html.Action("Carousel", "Albums", new { id = Model.RelatedAlbumId })
            }
        </div>

    </div>
    <div class="col-md-7 single-content-left">
        <div class="single">
            @Html.Action("Form", "Comments", new { newsId = Model.Id })
            <div id="article-comments">
                @Html.Action("ForNews", "Comments", new { newsId = Model.Id })
            </div>
        </div>
    </div>
    <div class="col-md-5 content-right content-right-top">
        @Html.Action("PopularNews", "News")
    </div>
    <div class="clearfix"></div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jquery-unobtrusive")
    @Styles.Render("~/Content/toastr")
    @Scripts.Render("~/bundles/toastr")
    @Scripts.Render("~/bundles/client/comments")

    <script>
        APP.Comments.init();
    </script>
}