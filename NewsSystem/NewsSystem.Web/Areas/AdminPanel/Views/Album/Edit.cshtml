@using NewsSystem.Data.ViewModels.Albums
@using NewsSystem.Web.Helpers

@model AlbumEditViewModel

<div class="row padding-form">
    <div class="row">
        @using (Html.BeginForm("Edit", "Album", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.Id, new { @Value = Model.Id, @id = "hidden-edit-album-id" })
            @Html.HiddenFor(m => m.CoverImageId, new { @Value = Model.CoverImageId, @id = "hidden-edit-album-cover-image-id" })

            <div class="col-md-2 word-wraped">
                @for (int i = 0; i < Model.ChosenCategories.Count; i++)
                {
                    @Html.HiddenFor(m => m.ChosenCategories[i].Title)

                    <h4>
                        <strong>@Model.ChosenCategories[i].Title</strong>
                    </h4>
                    for (int j = 0; j < Model.ChosenCategories[i].Children.Count; j++)
                    {
                        <div>
                            @Html.EditorFor(m => m.ChosenCategories[i].Children[j])
                        </div>
                    }
                }
                @*@Html.Action("CategoryTreeSelectMode", "Category", new { })*@
            </div>
            <div class="col-md-6">
                <div class="list-group panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Title, new { })
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Summary, new { })
                        @Html.TextAreaFor(m => m.Summary, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Summary, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Tags, new { @for = "tokenfield" })
                        <input type="text" class="form-control" id="tokenfield" name="Tags" value="@string.Join(", ", Model.Tags.ToArray())" />
                    </div>
                    <div class="form-group">
                        <div>
                            <label for="AlbumPostedImages">Chose picture</label>
                            <input type="file" name="AlbumPostedImages" id="AlbumPostedImages" multiple class="btn btn-default" />
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="button" name="ChoseFromGallery" id="ChooseImg" class="btn btn-default" value="Gallery" />
                    </div>

                    <div>
                        <button type="submit" value="Edit" class="btn btn-default">Edit</button>
                        <a href="@Url.Action("Index", "Album")" c class="btn btn-sm btn-danger">Cancel</a>
                    </div>
                </div>
            </div>
            <div class="col-md-4" id="album-cover-holder">
                <div>
                    <img src="@Url.Action("NSImage", "NSImage", new { Area = string.Empty, imageId = Model.CoverImageId })" alt="No cover photo for album found..." class="img-responsive img-rounded" />
                </div>
            </div>
        }
    </div>
</div>

<div class="container-fluid" id="album-edit-nsimages-grid">
    @Html.Action("NSImagesAlbumGrid", "NSImage", new { albumId = Model.Id })
</div>

<div class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="form-group input-group">
                    <input type="text" id="nsimagesSearchTextfield" name="NSImageText" value="@(this.ViewBag.LastText != null ? this.ViewBag.LastText : string.Empty)" class="form-control" placeholder="By text..." />
                    <span class="input-group-btn">
                        <a href="@Url.Action("NSImagesAlbumChooseGrid", "NSImage", new { albumId = Model.Id })"
                           class="btn btn-primary"
                           data-album="@this.ViewBag.AlbumId"
                           id="search-album-choose-images-grid">
                            <i class="fa fa-search"></i>
                        </a>
                    </span>
                </div>
                <input type="text" id="nsimagesSearchTokenfield" name="NSImageTags" value="" class="form-control" placeholder="By tags..." />
                <br />
            </div>
            <div id="choose-img-modal-container">
                @Html.Action("NSImagesAlbumChooseGrid", "NSImage", new { albumId = Model.Id, text = string.Empty })
            </div>
        </div>

        <div class="modal-footer">
            <button type="submit" class="btn btn-danger btn-default pull-left" data-dismiss="modal">
                <span class="glyphicon glyphicon-remove"></span> Cancel
            </button>
            <a href="@Url.AbsoluteAction("PushImagesToAlbum", "NSImage", new { })" id="pushImagesToAlbum" class="btn btn-success">Select</a>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/tinymce")
    @Scripts.Render("~/bundles/admin-panel-albums")
    @Scripts.Render("~/bundles/admin-panel-ns-images")

    <script>
        $(document).ready(function () {
            APP.CommonTagsModule.init('@Url.AbsoluteAction("GetTags", "Tag")');
            APP.CommonTagsModule.initByElementId('@Url.AbsoluteAction("GetTags", "Tag")', 'nsimagesSearchTokenfield');
            APP.Albums.initEdit();
            APP.NSImages.searchImagesForAlbumInit();
            APP.TinymceInitializer.basicInit();
        })
    </script>
}
