@using NewsSystem.Data.ViewModels.Articles
@using NewsSystem.Web.Helpers

@model ArticleEditViewModel

<div class="container-fluid">
    <div class="row">
        @using (Html.BeginForm("Edit", "Article", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.Id)

            <div class="col-md-2 word-wraped">
                @for (int i = 0; i < Model.ChosenCategories.Count; i++)
                {
                    @Html.HiddenFor(m => m.ChosenCategories[i].Title)

                    <h4>
                        <strong>@Model.ChosenCategories[i].Title</strong>
                    </h4>
                    for (int j = 0; j < Model.ChosenCategories[i].Children.Count; j++)
                    {
                        <div>
                            @Html.EditorFor(m => m.ChosenCategories[i].Children[j])
                        </div>
                    }
                }
            </div>
            <div class="col-md-6">
                <div class="list-group panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Title, new { })
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { })
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Summary, new { })
                        @Html.TextAreaFor(m => m.Summary, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Summary, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(m => m.RelatedAlbumId, new { id = "album-selected-input", @class = "" })
                        <label for="AlbumChoice">Link album</label>
                        <input type="button" name="ChoseFromGalleries" id="AlbumChoice" class="btn btn-default" value="Albums" />
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(m => m.CoverImageId, new { id = "cover-image-input", @class = "" })
                        <label for="CoverImageChoice">Chose cover image</label>
                        <input type="button" name="CoverImageChoice" id="CoverImageChoice" class="btn btn-default" value="Images" />
                        @Html.ValidationMessageFor(m => m.CoverImageId, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div>
                    <button type="submit" value="Edit" class="btn btn-default">Edit</button>
                    <a href="@Url.Action("Index", "NSImage")" class="btn btn-sm btn-danger">Cancel</a>
                </div>
            </div>

            <div class="col-md-4">
                <div>
                    <img src="@Url.Action("NSImage", "NSImage", new { Area = string.Empty, imageId = Model.CoverImageId })" alt="No cover photo for album found..." class="img-responsive img-rounded" />
                </div>
            </div>
        }
    </div>
</div>

<div id="albums-grid-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="album-choice-modal-grid">
                @Html.Action("AlbumsChoiceGrid", "Album", new { selectedId = Model.RelatedAlbumId })
            </div>
        </div>
    </div>
</div>

<div id="cover-image-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="cover-image-modal-grid">
                @Html.Action("NSImagesCoverImageGrid", "NSImage", new { selectedId = Model.CoverImageId })
            </div>
        </div>
    </div>
</div>


@section scripts{
    @Scripts.Render("~/bundles/admin-panel-articles")
    @Scripts.Render("~/bundles/tinymce")

    <script>
        $(document).ready(function () {
            APP.CommonTagsModule.init('@Url.AbsoluteAction("GetTags", "Tag")')
            APP.TinymceInitializer.basicInit();
            APP.Articles.initCRUD();
        })
    </script>
}
